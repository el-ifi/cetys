q()
vect1
ls()
vect1 <- (1,4,7,NA,2,9)
vect1 <- c(1,4,7,NA,2,9)
vect1
vect1 <- c(1,4,7,NA,2,9)
#Crear un vector con datos inexistentes
vect1 <- c(1,4,7,NA,2,9)
#desplegar el vector
vect1
#Probando la ausencia de valores en el vector
is.na(vect1)
complete.cases(vect1)
mean(vect1,na.rm=TRUE)
library("caret", lib.loc="~/R/win-library/3.2")
library("pbkrtest", lib.loc="~/R/win-library/3.2")
install.packages("C:/Users/Gerardo/Downloads/Matrix_1.2-4(1).zip", repos = NULL, type = "win.binary")
library("caret", lib.loc="~/R/win-library/3.2")
install.packages("C:/Users/Gerardo/Downloads/caret_6.0-68.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Gerardo/Downloads/pbkrtest_0.4-6.tar.gz", repos = NULL, type = "source")
library("caret", lib.loc="~/R/win-library/3.2")
library("pbkrtest", lib.loc="~/R/win-library/3.2")
library("lme4", lib.loc="~/R/win-library/3.2")
source('~/.active-rstudio-document', echo=TRUE)
library("caret", lib.loc="~/R/win-library/3.2")
library("car", lib.loc="~/R/win-library/3.2")
library("entropy", lib.loc="~/R/win-library/3.2")
library("rpart", lib.loc="~/R/win-library/3.2")
library("car", lib.loc="~/R/win-library/3.2")
library("mlbench", lib.loc="~/R/win-library/3.2")
package_version(caret)
install.packages("caret")
library(caret)
install.packages("lattice")
install.packages("lattice")
install.packages("ggplot2")
library("caret")
remove.packages( installed.packages( priority = "NA" )[,1]
remove.packages( installed.packages( priority = "NA" )[,1] )
install.packages("nlme")
install.packages("caret")
library("caret", lib.loc="~/R/win-library/3.2")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("mlbench")
library("caret", lib.loc="~/R/win-library/3.2")
library("mlbench", lib.loc="~/R/win-library/3.2")
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Gerardo/Desktop/TESIS LILIAN/aplicadalilian.R', echo=TRUE)
source('D:/Documentos/UABC/Algoritmos/ejemploreg.R', echo=TRUE)
install.packages("tree")
install.packages("tree")
library(rpart)
data1 <- read.csv("verbal.csv", header=TRUE, sep=",")
data1
test1 <- na.omit(data1)
test1
library(rpart)
data1 <- read.csv("verbal.csv", header=TRUE, sep=",")
data1
test1 <- na.omit(data1)
test1
source('C:/Users/Gerardo/Desktop/TESIS LILIAN/datos filtrados/prepdat.R', echo=TRUE)
install.packages("neuralnet")
install.packages(c("nlme", "quantreg", "Rcpp"))
View(temp_test)
View(temp_test)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("pid")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages(c("car", "caret", "digest", "DoE.base", "irlba", "knitr", "lattice", "mime", "neuralnet", "packrat", "plyr", "quantreg", "Rcpp", "RcppEigen", "rmarkdown", "rsconnect", "rstudioapi", "SparseM", "stringi", "stringr", "vcd"))
install.packages("bookdown")
R.version
installr
install.packages("installr")
installr
updateR()
library("installr", lib.loc="~/R/win-library/3.2")
updateR()
install.packages(c("caret", "colorspace", "evaluate", "FrF2", "R6", "reshape2", "rmarkdown", "rsconnect", "shiny", "stringi"))
install.packages("kernlab")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
plot(hCluster)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('D:/Documentos/UABC/R/dataprep.R', echo=TRUE)
source('D:/Documentos/UABC/R/dataprep.R', echo=TRUE)
source('D:/Documentos/UABC/R/dataprep.R', echo=TRUE)
(61+458)/(1346+458+61+449)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
setwd("D:/Documentos/UABC/Group Research/CETYS")
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
mydata<-read.csv(file="Categoria.csv", head=TRUE,sep=",")
# Análisis preliminar de datos de prueba PLANEA CETYS
summary(mydata)
hist(mydata$Cantidad, col="red")
hist(mydata$Esp.Form, col="red")
hist(mydata$Cam..Rel., col="red")
res <- cor(mydata)
#Vusializar tabla de correlación
res
#Correlaciograma
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 50)
plot(cars)
View(mydata)
if (!require("pacman")) install.packages("pacman")
library(ggplot2)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2) #, package2, package_n
library(ggplot2)
library(ggplot2)
cant <- ggplot(mydata,
aes(Cantidad))
a
cant
cant <- ggplot(mydata,
aes(Cantidad)) +
geom_histogram(Cantidad, color = "blue")
cant <- ggplot(mydata,
aes(Cantidad)) +
geom_histogram(color = "blue")
cant <- ggplot(mydata,
aes(Cantidad)) +
geom_histogram(color = "blue")
qplot(mydata$Cantidad,
geom="histogram",
binwidth = 0.5,
fill = I("blue"))
qplot(mydata$Cantidad,
geom="histogram",
binwidth = 0.5,
fill = I("blue"))
qplot(mydata$Cantidad,
geom="histogram",
fill = I("blue"))
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 5),
col="pink",
fill="blue",
alpha = .2)
gplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 5),
col="pink",
fill="blue",
alpha = .2)
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 5),
col="pink",
fill="blue",
alpha = .2)
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 5),
col="pink",
fill="blue",
alpha = .2) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 5),
col="pink",
fill="blue",
alpha = .2) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 5),
col="pink",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="pink",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 5),
col="pink",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 5),
col="black",
fill="ambar",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 5),
col="black",
fill="yellow",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 5),
col="black",
fill="yellow",
alpha = .10) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="yellow",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
res <- cor(mydata)
#Vusializar tabla de correlación
res
#Correlaciograma
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 50)
res <- cor(mydata)
#Vusializar tabla de correlación
res
#Correlaciograma
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 50)
if (!require("pacman")) install.packages("pacman")  #####MAKING SURE PACKAGES NEEDED ARE INSTALLED
pacman::p_load(ggplot2) #, package2, package_n
library(ggplot2)
library(corrplot)
mydata<-read.csv(file="Categoria.csv", head=TRUE,sep=",")
# Análisis preliminar de datos de prueba PLANEA CETYS
summary(mydata)
library(ggplot2)
qplot(mydata$Cantidad,
geom="histogram",
fill = I("blue"))
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="ambar",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
library(ggplot2)
qplot(mydata$Cantidad,
geom="histogram",
fill = I("blue"))
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="yellow",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
library(ggplot2)
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="yellow",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
library(ggplot2)
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="yellow",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
library(ggplot2)
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Esp.Form)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Geometría", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cam..Rel.)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Álgegra", x = "Calificación", y = "Cantidad de Estudiantes")
?corplot
?corrplot
corrplot(res, type = "full", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res, type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res, type = "full", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res, type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res, method = "shade",type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res, method = "ellipse",type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res, method = "number",type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res, method = "pie",type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res, method = "square",type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res, method = "circle",type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
corrplot(res,type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
Try executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*.
```{r}
plot(cars)
```
Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.
When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).
if (!require("pacman")) install.packages("pacman")  #####MAKING SURE PACKAGES NEEDED ARE INSTALLED
pacman::p_load(ggplot2) #, package2, package_n
library(ggplot2)
library(corrplot)
mydata<-read.csv(file="Categoria.csv", head=TRUE,sep=",")
# Análisis preliminar de datos de prueba PLANEA CETYS
summary(mydata)
library(ggplot2)
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Esp.Form)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Geometría", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cam..Rel.)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Álgegra", x = "Calificación", y = "Cantidad de Estudiantes")
res <- cor(mydata)
#Vusializar tabla de correlación
res
#Correlaciograma
corrplot(res,type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
if (!require("pacman")) install.packages("pacman")  #####MAKING SURE PACKAGES NEEDED ARE INSTALLED
pacman::p_load(ggplot2) #, package2, package_n
library(ggplot2)
library(corrplot)
mydata<-read.csv(file="Categoria.csv", head=TRUE,sep=",")
# Análisis preliminar de datos de prueba PLANEA CETYS
summary(mydata)
library(ggplot2)
ggplot(data = mydata, aes(mydata$Cantidad)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Aritmética", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Esp.Form)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Geometría", x = "Calificación", y = "Cantidad de Estudiantes")
ggplot(data = mydata, aes(mydata$Cam..Rel.)) +
geom_histogram(breaks=seq(0, 100, by = 10),
col="black",
fill="blue",
alpha = .5) +
labs(title = "Histograma de la distribución de Resultados en Álgegra", x = "Calificación", y = "Cantidad de Estudiantes")
res <- cor(mydata)
#Vusializar tabla de correlación
res
#Correlaciograma
corrplot(res,type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
